box: node:10.16-alpine

build:
  steps:
    - bashaus/yarn-install:
      name: install-dependencies

    - script:
      name: style-guide-check
      code: yarn lint

    - script:
      name: unit-test
      code: yarn test:unit

    - script:
      name: cleanup
      code: |
        rm -rf ./node_modules

store:
  docker: true
  box:
    id: arcanebet/frontend
    username: $DOCKERHUB_USERNAME
    password: $DOCKERHUB_PASSWORD
    tag: puppeteer-v11

  steps:
    # Install yarn and build assets in a puppeteer-v10 box
    - bashaus/yarn-install:
      name: install-dependencies

    - script:
      name: build-production-assets
      code: yarn build

    - script:
      name: create-artifact
      code: |
        export ARTIFACT=$(date +%Y-%m-%d--%H-%M-%S)
        if [ -e $WERCKER_GIT_COMMIT.txt ]; then rm $WERCKER_GIT_COMMIT.txt; fi
        touch $WERCKER_GIT_COMMIT.txt
        echo $ARTIFACT > $WERCKER_GIT_COMMIT.txt

    # Build another docker image with just the assets and nginx
    - script:
      name: Build docker image
      code: |
        docker build --network=$DOCKER_NETWORK_NAME -t arcanebet/frontend:$WERCKER_GIT_COMMIT -f deploy/${DOCKERFILE:-Dockerfile} .

    - internal/docker-push:
      username: $DOCKERHUB_USERNAME
      password: $DOCKERHUB_PASSWORD
      repository: arcanebet/frontend
      tag: $WERCKER_GIT_COMMIT-$ARTIFACT

deploy:
  box: python:2.7-alpine

  steps:
    - script:
      name: read-artifact
      code: export ARTIFACT=$(cat $WERCKER_GIT_COMMIT.txt)

    - script:
      name: install-linux-deps
      code: apk add -qU openssh git curl jq

    - capgemini/terraform-install:
      version: "0.11.14"

    - edgecaseadmin/install-aws-cli:
      key: $AWS_ACCESS_KEY_ID
      secret: $AWS_SECRET_ACCESS_KEY
      region: $AWS_DEFAULT_REGION

    - add-ssh-key:
      keyname: GITHUB

    - script:
      name: add-github-to-known-hosts
      code: ssh-keyscan github.com >> /root/.ssh/known_hosts

    - script:
      name: clone-terraform-config
      code: |
        rm -rf $TERRAFORM_CONFIG_DIR
        git clone \
            git@github.com:arcanebet/infrastructure.git \
            $TERRAFORM_CONFIG_DIR

    - script:
      name: update-image-tag
      code: |
        aws ssm put-parameter \
            --name ${TAG_PARAM:-/frontend/tag} \
            --value $WERCKER_GIT_COMMIT-$ARTIFACT \
            --type SecureString \
            --overwrite

    - script:
      name: terraform-apply
      code: |
        cd $TERRAFORM_CONFIG_DIR/terraform/services/${FRONTEND_PATH:-frontend}
        terraform init
        terraform workspace select ${CASINO_ENV:-${TARGET_ENV}}
        terraform apply -auto-approve
